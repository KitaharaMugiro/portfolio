{"version":3,"file":"static/webpack/static/development/pages/products.js.f28fde420aa0be920170.hot-update.js","sources":["webpack:///./pages/products/share-cycle.tsx"],"sourcesContent":["import { ProductList } from \"../../contents/ProductList\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../constants/colors\";\nimport { getPath } from \"../../constants/utils\";\nimport Chips from \"../../components/Chips\";\nimport {\n  Image,\n  Frame,\n  Title,\n  Description,\n  HeaderLine,\n  Link\n} from \"../../components/ProductStyledComponents\";\n\nconst slug = \"share-cycle\";\nconst architectImage = getPath(\"/share-cycle-architect.png\");\nconst description =\n  \"IoTを使わずにQRコードとスマートフォンだけでシェアサイクルを実現させた。QRコードの読み込みで解錠し、解錠せずに利用するとアラームが鳴ることで不正利用を防ぐ。\";\nconst difficulty =\n  \"PoCを作成して公園内に配置して利用されるかをテストする予定だったが、公園の許可がおりず断念した。QRコードを読んでwebアプリケーションを起動しapple payで支払って即座に利用開始するUXを実現したかった\";\nexport default () => {\n  const product = ProductList.find(p => p.slug === slug);\n\n  const renderImage = () => {\n    if (product?.image) {\n      return (\n        <Image\n          src={getPath(product.image)}\n          onClick={() => (window.location.href = \"/products/\" + slug)}\n        ></Image>\n      );\n    }\n  };\n\n  if (!product) {\n    console.error(\"見つかりません\");\n    return <div></div>;\n  }\n\n  return (\n    <Frame>\n      {renderImage()}\n      <Title>{product?.name}</Title>\n      <Chips tags={product?.tags} />\n      <Description>{description}</Description>\n      <HeaderLine>アーキテクチャ図(クリックで拡大)</HeaderLine>\n      <Image\n        src={architectImage}\n        onClick={() => (window.location.href = \"/products/\" + slug)}\n      ></Image>\n      <HeaderLine>苦労したこと/どう乗り越えたか</HeaderLine>\n      <Description>{difficulty}</Description>\n      <HeaderLine>詳細リンク</HeaderLine>\n      <Link href=\"https://hackmd.io/NqMcAjL0Q-SQbyAzOkqPWg\">\n        アイディア説明資料\n      </Link>\n      <HeaderLine>Github</HeaderLine>\n      <Link href=\"https://github.com/KitaharaMugiro/rental-cycle\">\n        rental-cycle\n      </Link>\n    </Frame>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AASA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}